{"version":3,"file":"static/js/539.cfd1d3e0.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.js","services/api.js"],"sourcesContent":["import { useState, useEffect, Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { NavLink, useParams, useNavigate, Outlet, useLocation } from 'react-router-dom';\nimport { getMoviesDetails } from '../../services/api';\nimport defaultPhoto from '../../components/img/no_image.jpg';\nimport './MovieDetails.css';\n\nfunction MovieDetails() {\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const goBack = () => {\n    if (location.state) {\n      navigate(location.state.from.pathname + location.state.from.search);\n    } else {\n      navigate('/');\n    }\n  };\n  \n  useEffect(() => {\n    const getMovie = async () => {\n      const data = await getMoviesDetails(movieId);\n      if (data) {\n        setMovie(data);\n      }\n    };\n\n    getMovie();\n  }, [movieId]);\n\n  return (\n    <div className=\"movie-details\">\n      <button onClick={goBack}>Go Back</button>\n      <div className=\"poster\">\n        {movie ? (\n          <img\n            src={\n              movie.poster_path\n                ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n                : defaultPhoto\n            }\n            alt={movie.title}\n            width=\"250\"\n          />\n        ) : (\n          <div>Loading...</div>\n        )}\n      </div>\n      <div className=\"movie-info\">\n        {movie && (\n          <>\n            <h1>{movie.title}</h1>\n            <p>User Score: {movie.vote_average * 10}%</p>\n            <h2>Overview</h2>\n            <span>{movie.overview}</span>\n            {movie.genres && (\n              <>\n                <h3>Genres</h3>\n                <ul>\n                  {movie.genres.map((genre) => (\n                    <li key={genre.id}>{genre.name}</li>\n                  ))}\n                </ul>\n              </>\n            )}\n          </>\n        )}\n      </div>\n      <div className=\"additional-info\">\n        <p>Additional information</p>\n        <nav>\n          <NavLink to={`/movies/${movieId}/cast`} activeClassName=\"active-link\">Cast</NavLink>\n          <NavLink to={`/movies/${movieId}/reviews`} activeClassName=\"active-link\">Reviews</NavLink>\n        </nav>\n        <Suspense fallback={<div>Loading subpage...</div>}>\n          <Outlet />\n        </Suspense>\n      </div>\n    </div>\n  );\n}\n\nMovieDetails.propTypes = {\n  location: PropTypes.object.isRequired,\n}\n\nexport default MovieDetails;","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'd607859253f419a97e2a864827f40ef4';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w200';\n\nexport async function getPopularMovies(page) {\n  try {\n    const config = {\n      url: `trending/movie/day`,\n      params: {\n        page,\n      },\n    };\n    const { data } = await axios(config);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nexport async function getMoviesWithName(name, page) {\n  try {\n    const config = {\n      url: `search/movie`,\n      params: {\n        query: name,\n        page,\n      },\n    };\n    const { data } = await axios(config);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nexport async function getMoviesDetails(id) {\n  try {\n    const config = {\n      url: `movie/${id}`,\n    };\n    const { data } = await axios(config);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nexport async function getCastInfo(id) {\n  try {\n    const config = {\n      url: `movie/${id}/credits`,\n    };\n    const { data } = await axios(config);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nexport async function getMovieReview(id) {\n  try {\n    const config = {\n      url: `movie/${id}/reviews`,\n    };\n    const response = await axios(config);\n    return response.data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n"],"names":["useState","movie","setMovie","movieId","useParams","navigate","useNavigate","location","useLocation","useEffect","getMovie","getMoviesDetails","data","className","onClick","state","from","pathname","search","src","poster_path","defaultPhoto","alt","title","width","vote_average","overview","genres","map","genre","name","id","to","activeClassName","Suspense","fallback","axios","api_key","language","IMAGE_URL","getPopularMovies","page","config","url","params","console","log","error","getMoviesWithName","query","getCastInfo","getMovieReview","response","results"],"sourceRoot":""}