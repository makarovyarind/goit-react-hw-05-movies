{"version":3,"file":"static/js/228.077da800.chunk.js","mappings":"oOAKe,SAASA,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QASR,OANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAYH,GAASI,MAAK,SAACC,GAAD,OAAaN,EAAQM,EAAQP,KAA7B,GAC3B,GAAE,CAACE,IAEJM,QAAQC,IAAIT,IAGV,eAAIU,UAAU,OAAd,SACGV,EAAKW,KAAI,SAACC,GAAD,OACR,gBAAkBF,UAAU,WAA5B,WACE,gBAAKG,IAAKC,EAAAA,GAAYF,EAAKG,aAAcC,IAAKJ,EAAKK,KAAMP,UAAU,kBACnE,cAAGA,UAAU,gBAAb,SAA8BE,EAAKK,SAF5BL,EAAKM,GADN,KAQf,C,uNCrBDC,EAAAA,EAAAA,SAAAA,QAHiB,gCAIjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,mCAKdC,SAAU,SAGL,IAAMP,EAAY,kCAElB,SAAeQ,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,2FAEGC,EAAS,CACbC,IAAI,qBACJC,OAAQ,CACNH,KAAAA,IALD,UAQoBJ,EAAAA,EAAAA,GAAMK,GAR1B,uBAQKG,EARL,EAQKA,KARL,kBASIA,GATJ,uCAWHnB,QAAQC,IAAI,QAAS,CAAEmB,MAAK,OAXzB,kBAYI,MAZJ,gFAgBA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAAiCZ,EAAMM,GAAvC,2FAEGC,EAAS,CACbC,IAAI,eACJC,OAAQ,CACNI,MAAOb,EACPM,KAAAA,IAND,UASoBJ,EAAAA,EAAAA,GAAMK,GAT1B,uBASKG,EATL,EASKA,KATL,kBAUIA,GAVJ,uCAYHnB,QAAQC,IAAI,QAAS,CAAEmB,MAAK,OAZzB,kBAaI,MAbJ,gFAiBA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAgCb,GAAhC,2FAEGM,EAAS,CACbC,IAAI,SAAD,OAAWP,IAHb,UAKoBC,EAAAA,EAAAA,GAAMK,GAL1B,uBAKKG,EALL,EAKKA,KALL,kBAMIA,GANJ,uCAQHnB,QAAQC,IAAI,QAAS,CAAEmB,MAAK,OARzB,kBASI,MATJ,gFAaA,SAAevB,EAAtB,+CAAO,OAAP,oBAAO,WAA2Ba,GAA3B,2FAEGM,EAAS,CACbC,IAAI,SAAD,OAAWP,EAAX,aAHF,UAKoBC,EAAAA,EAAAA,GAAMK,GAL1B,uBAKKG,EALL,EAKKA,KALL,kBAMIA,GANJ,uCAQHnB,QAAQC,IAAI,QAAS,CAAEmB,MAAK,OARzB,kBASI,MATJ,gFAaA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA8Bd,GAA9B,yFAEGM,EAAS,CACbC,IAAI,SAAD,OAAWP,EAAX,aAHF,UAKoBC,EAAAA,EAAAA,GAAMK,GAL1B,cAKGS,EALH,yBAMIA,EAASN,KAAKO,SANlB,uCAQH1B,QAAQC,IAAI,QAAS,CAAEmB,MAAK,OARzB,kBASI,MATJ,gF","sources":["pages/Cast/Cast.js","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { getCastInfo, IMAGE_URL } from '../../services/api';\nimport './Cast.css';\n\nexport default function Cast() {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n\n  useEffect(() => {\n    getCastInfo(movieId).then((request) => setCast(request.cast));\n  }, [movieId]);\n\n  console.log(cast);\n\n  return (\n    <ul className=\"Cast\">\n      {cast.map((item) => (\n        <li key={item.id} className=\"CastItem\">\n          <img src={IMAGE_URL + item.profile_path} alt={item.name} className=\"CastItem_img\" />\n          <p className=\"CastItem_text\">{item.name}</p>\n        </li>\n      ))}\n    </ul>\n  );\n}","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'd607859253f419a97e2a864827f40ef4';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w200';\n\nexport async function getPopularMovies(page) {\n  try {\n    const config = {\n      url: `trending/movie/day`,\n      params: {\n        page,\n      },\n    };\n    const { data } = await axios(config);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nexport async function getMoviesWithName(name, page) {\n  try {\n    const config = {\n      url: `search/movie`,\n      params: {\n        query: name,\n        page,\n      },\n    };\n    const { data } = await axios(config);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nexport async function getMoviesDetails(id) {\n  try {\n    const config = {\n      url: `movie/${id}`,\n    };\n    const { data } = await axios(config);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nexport async function getCastInfo(id) {\n  try {\n    const config = {\n      url: `movie/${id}/credits`,\n    };\n    const { data } = await axios(config);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nexport async function getMovieReview(id) {\n  try {\n    const config = {\n      url: `movie/${id}/reviews`,\n    };\n    const response = await axios(config);\n    return response.data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n"],"names":["Cast","useState","cast","setCast","movieId","useParams","useEffect","getCastInfo","then","request","console","log","className","map","item","src","IMAGE_URL","profile_path","alt","name","id","axios","api_key","language","getPopularMovies","page","config","url","params","data","error","getMoviesWithName","query","getMoviesDetails","getMovieReview","response","results"],"sourceRoot":""}