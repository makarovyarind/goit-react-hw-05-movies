{"version":3,"file":"static/js/761.eded7f16.chunk.js","mappings":"oOAIe,SAASA,IACpB,OAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAeH,GAASI,MAAK,SAACC,GAAD,OAAaN,EAAWM,EAAQC,KAAhC,GAC9B,GAAE,CAACN,KAGF,8BACKF,GACG,wBACKA,EAAQS,KAAI,SAAAC,GAAI,OACZ,2BACG,0BAAG,uCAAsBA,EAAKC,WAC9B,uBAAID,EAAKE,YAFHF,EAAKG,GADF,OAOrB,yCAGf,C,uNCrBDC,EAAAA,EAAAA,SAAAA,QAHiB,gCAIjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAJc,mCAKdC,SAAU,SAGL,IAAMC,EAAY,kCAElB,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAgCC,GAAhC,2FAEGC,EAAS,CACbC,IAAI,qBACJC,OAAQ,CACNH,KAAAA,IALD,UAQoBL,EAAAA,EAAAA,GAAMM,GAR1B,uBAQKG,EARL,EAQKA,KARL,kBASIA,GATJ,uCAWHC,QAAQC,IAAI,QAAS,CAAEC,MAAK,OAXzB,kBAYI,MAZJ,gFAgBA,SAAeC,EAAtB,iDAAO,OAAP,oBAAO,WAAiCC,EAAMT,GAAvC,2FAEGC,EAAS,CACbC,IAAI,eACJC,OAAQ,CACNO,MAAOD,EACPT,KAAAA,IAND,UASoBL,EAAAA,EAAAA,GAAMM,GAT1B,uBASKG,EATL,EASKA,KATL,kBAUIA,GAVJ,uCAYHC,QAAQC,IAAI,QAAS,CAAEC,MAAK,OAZzB,kBAaI,MAbJ,gFAiBA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAgCjB,GAAhC,2FAEGO,EAAS,CACbC,IAAI,SAAD,OAAWR,IAHb,UAKoBC,EAAAA,EAAAA,GAAMM,GAL1B,uBAKKG,EALL,EAKKA,KALL,kBAMIA,GANJ,uCAQHC,QAAQC,IAAI,QAAS,CAAEC,MAAK,OARzB,kBASI,MATJ,gFAaA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA2BlB,GAA3B,2FAEGO,EAAS,CACbC,IAAI,SAAD,OAAWR,EAAX,aAHF,UAKoBC,EAAAA,EAAAA,GAAMM,GAL1B,uBAKKG,EALL,EAKKA,KALL,kBAMIA,GANJ,uCAQHC,QAAQC,IAAI,QAAS,CAAEC,MAAK,OARzB,kBASI,MATJ,gFAaA,SAAerB,EAAtB,+CAAO,OAAP,oBAAO,WAA8BQ,GAA9B,yFAEGO,EAAS,CACbC,IAAI,SAAD,OAAWR,EAAX,aAHF,UAKoBC,EAAAA,EAAAA,GAAMM,GAL1B,cAKGY,EALH,yBAMIA,EAAST,KAAKU,SANlB,uCAQHT,QAAQC,IAAI,QAAS,CAAEC,MAAK,OARzB,kBASI,MATJ,gF","sources":["pages/Reviews/Reviews.js","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router';\nimport { getMovieReview } from '../../services/api';\n\nexport default function Reviews() {\n    const [reviews, setReviews] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        getMovieReview(movieId).then((request) => setReviews(request.cast));\n      }, [movieId]);\n\n    return (\n        <>\n            {reviews ? (\n                <ul>\n                    {reviews.map(item=> \n                        (<li key={item.id}>\n                            <p><span>Author: </span>{item.author}</p>\n                            <p>{item.content}</p>\n                        </li>)\n                    )}\n                </ul>\n            ) : <div>No reviews</div>}\n        </>\n    )\n};","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = 'd607859253f419a97e2a864827f40ef4';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w200';\n\nexport async function getPopularMovies(page) {\n  try {\n    const config = {\n      url: `trending/movie/day`,\n      params: {\n        page,\n      },\n    };\n    const { data } = await axios(config);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nexport async function getMoviesWithName(name, page) {\n  try {\n    const config = {\n      url: `search/movie`,\n      params: {\n        query: name,\n        page,\n      },\n    };\n    const { data } = await axios(config);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nexport async function getMoviesDetails(id) {\n  try {\n    const config = {\n      url: `movie/${id}`,\n    };\n    const { data } = await axios(config);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nexport async function getCastInfo(id) {\n  try {\n    const config = {\n      url: `movie/${id}/credits`,\n    };\n    const { data } = await axios(config);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n\nexport async function getMovieReview(id) {\n  try {\n    const config = {\n      url: `movie/${id}/reviews`,\n    };\n    const response = await axios(config);\n    return response.data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return null;\n  }\n}\n"],"names":["Reviews","useState","reviews","setReviews","movieId","useParams","useEffect","getMovieReview","then","request","cast","map","item","author","content","id","axios","api_key","language","IMAGE_URL","getPopularMovies","page","config","url","params","data","console","log","error","getMoviesWithName","name","query","getMoviesDetails","getCastInfo","response","results"],"sourceRoot":""}